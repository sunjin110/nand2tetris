function Screen.init 2
push constant 1
pop local 1
push constant 16
call Array.new 1
pop static 2
label WHILE_START_0
push local 0
push constant 16
lt
not
if-goto WHILE_END_0
push local 0
push static 2
add
push local 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 1
push local 1
add
pop local 1
push local 0
push constant 1
add
pop local 0
goto WHILE_START_0
label WHILE_END_0
push constant 16384
pop static 1
push constant 0
not
pop static 0
push constant 0
return
function Screen.cleanScreen 1
label WHILE_START_0
push local 0
push constant 8160
lt
not
if-goto WHILE_END_0
push local 0
push static 1
add
push constant 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
push constant 1
add
pop local 0
goto WHILE_START_0
label WHILE_END_0
push constant 0
return
function Screen.blackScreen 1
label WHILE_START_0
push local 0
push constant 8160
lt
not
if-goto WHILE_END_0
push local 0
push static 1
add
push constant 1
neg
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
push constant 1
add
pop local 0
goto WHILE_START_0
label WHILE_END_0
push constant 0
return
function Screen.setColor 0
push argument 0
pop static 0
push constant 0
return
function Screen.drawPixel 1
push argument 0
push argument 1
call Screen.getAddress 2
pop local 0
push static 0
push constant 0
not
eq
if-goto IF_TRUE_0
goto IF_FALSE_0
label IF_TRUE_0
push local 0
push static 1
add
push argument 0
call Math.surplusX16 1
push static 2
add
pop pointer 1
push that 0
push local 0
push static 1
add
pop pointer 1
push that 0
or
pop temp 0
pop pointer 1
push temp 0
pop that 0
goto IF_END_0
label IF_FALSE_0
push local 0
push static 1
add
push argument 0
call Math.surplusX16 1
push static 2
add
pop pointer 1
push that 0
not
push local 0
push static 1
add
pop pointer 1
push that 0
and
pop temp 0
pop pointer 1
push temp 0
pop that 0
label IF_END_0
push constant 0
return
function Screen.drawLine 0
push argument 1
push argument 3
eq
if-goto IF_TRUE_0
goto IF_END_0
label IF_TRUE_0
push argument 0
push argument 2
push argument 1
call Screen.drawHorizonLine 3
pop temp 0
push constant 0
return
goto IF_END_0
label IF_END_0
push argument 0
push argument 2
eq
if-goto IF_TRUE_1
goto IF_END_1
label IF_TRUE_1
push argument 0
push argument 1
push argument 3
call Screen.drawVerticalLine 3
pop temp 0
push constant 0
return
goto IF_END_1
label IF_END_1
push constant 0
return
function Screen.drawHorizonLine 1
push argument 0
pop local 0
label WHILE_START_0
push local 0
push argument 1
push constant 1
add
lt
not
if-goto WHILE_END_0
push local 0
push argument 2
call Screen.drawPixel 2
pop temp 0
push local 0
push constant 1
add
pop local 0
goto WHILE_START_0
label WHILE_END_0
push constant 0
return
function Screen.drawVerticalLine 1
push argument 1
pop local 0
label WHILE_START_0
push local 0
push argument 2
push constant 2
add
lt
not
if-goto WHILE_END_0
push argument 0
push local 0
call Screen.drawPixel 2
pop temp 0
push local 0
push constant 1
add
pop local 0
goto WHILE_START_0
label WHILE_END_0
push constant 0
return
function Screen.drawRectangle 2
push argument 1
pop local 1
label WHILE_START_0
push local 1
push argument 3
lt
not
if-goto WHILE_END_0
push argument 0
pop local 0
label WHILE_START_1
push local 0
push argument 2
lt
not
if-goto WHILE_END_1
push local 0
push local 1
call Screen.drawPixel 2
pop temp 0
push local 0
push constant 1
add
pop local 0
goto WHILE_START_1
label WHILE_END_1
push local 1
push constant 1
add
pop local 1
goto WHILE_START_0
label WHILE_END_0
push constant 0
return
function Screen.drawCircle 0
push constant 0
return
function Screen.getAddress 0
push argument 1
push constant 32
call Math.multiply 2
push argument 0
push constant 16
call Math.divide 2
add
return
